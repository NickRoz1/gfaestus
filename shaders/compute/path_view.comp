#version 450

layout (set = 0, binding = 0) readonly buffer Paths {
  uint node[];
} paths;

layout (set = 0, binding = 1) buffer Output {
  vec4 color[];
} image;

layout (set = 1, binding = 0) uniform samplerBuffer overlay;

layout (push_constant) uniform PushConstants {
  uint path_count;
  uint width;
  uint height;
  uint dummy;
} pc;

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() {

  uint path = gl_GlobalInvocationID.y;

  if (path < pc.path_count) {

    // find index for current pixel
    uint ix = (path * pc.width) + gl_GlobalInvocationID.x;

    // read node at index
    uint node = paths.node[ix];

    if (node != 0) {
      // sample overlay at node
      uint color_u = node - 1;
      vec4 color = texelFetch(overlay, int(color_u));

      // write sampled value at index to output buffer
      image.color[ix] = color;
      // image.color[ix] = vec4(1.0, 0.0, 0.0, 1.0);

    } else {
      // if there's no node, write an empty pixel
      image.color[ix] = vec4(0.0);
    }
  }
}
